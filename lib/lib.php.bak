<?php

function knowledgefox_is_teacher($context = null, $userid = null) {
	$context = knowledgefox_get_context_from_courseid($context);
//$context = context_course::instance($course);
	return has_capability('mod/knowledgefox:teacher', $context, $userid);
}

function knowledgefox_is_student($context = null) {
	$context = knowledgefox_get_context_from_courseid($context);

	// a teacher can not be a student in the same course
	return has_capability('mod/knowledgefox:student', $context) && !has_capability('mod/knowledgefox:teacher', $context);
}

function knowledgefox_get_context_from_courseid($courseid) {
	if ($courseid instanceof context) {
		// already context
		return $courseid;
	} else if (is_numeric($courseid)) { // don't use is_int, because eg. moodle $COURSE->id is a string!
		return context_course::instance($courseid);
	} else if ($courseid === null) {
		return context_course::instance(g::$COURSE->id);
	} else {
		throw new \moodle_exception('wrong courseid type '.gettype($courseid));
	}
}

function knowledgefox_grade_delete($instance) {
	global $CFG;
	require_once $CFG->libdir.'/gradelib.php';

	return grade_update('mod/knowledgefox', $instance->course, 'mod', 'knowledgefox', $instance->id, 0, null, array('deleted' => 1));
}

function knowledgefox_grade_update($instance, $grades=null) {
	global $CFG;
	require_once $CFG->libdir.'/gradelib.php';

	$params = array('itemname' => $instance->name);
	// idnumber = $instance->cmidnumber;
	$params['gradetype'] = GRADE_TYPE_VALUE;
	$params['grademax'] = 100;
	$params['grademin'] = 0;

	if ($grades === 'reset') {
		$params['reset'] = true;
		$grades = null;
	}
//print_r($grades);
	return grade_update('mod/knowledgefox', $instance->course, 'mod', 'knowledgefox', $instance->id, 0, $grades, $params);
}

function knowledgefox_output_get_json_content($val){
	$pos = strpos($val, "application/json");
	if ($pos === false) {
	    
	} else {
			$pos=$pos+17;
	    $val=substr($val,$pos);
	    $posend=strripos($val, "]");
	    if ($posend === false) {
			} else {
				$val=substr($val,0,$posend+1);
			}
	    
	}
	return $val;
}

function knowledgefox_user_is_ingroup($kf_user,$kfgroupname){
		foreach($kf_user->groupTitles as $grouptitle){
			if($grouptitle==$kfgroupname) {return true; exit;}
		}
		return false;
}

/*Webservice functions */
function knowledgefox_ws_get_kfuser($user,$wsparams){
 	
	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $wsparams->knowledgefoxserver."/KnowledgePulse/ws/rest/client/3.0/users?projection=import");
	curl_setopt($ch, CURLOPT_HEADER, true);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_USERPWD, $wsparams->knowledgeauthuser.":".$wsparams->knowledgeauthpwd);
	curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
	$output = curl_exec($ch);
	//$info = curl_getinfo($ch);
	if ($wsparams->LOCALH) $output='#####HTTP/1.1 200 OK Date: Mon, 27 Nov 2017 10:31:37 GMT Server: Apache Strict-Transport-Security: max-age=31536000 Set-Cookie: JSESSIONID=3CB1655F86BA94B791D14A78D29E3150; Path=/KnowledgePulse/; Secure; HttpOnly X-Content-Type-Options: nosniff X-XSS-Protection: 1; mode=block Cache-Control: no-cache, no-store, max-age=0, must-revalidate Pragma: no-cache Expires: 0 Strict-Transport-Security: max-age=31536000 ; includeSubDomains Transfer-Encoding: chunked Content-Type: application/json [ { "userId" : 16, "username" : "gsadmin", "roleId" : 1, "groupTitles" : [ "KnowledgeApp", "public content" ] }, { "userId" : 17, "username" : "kfoxadmin", "roleId" : 8, "groupTitles" : [ "KnowledgeApp", "public content" ] }, { "userId" : 18, "username" : "m.freisitzer", "roleId" : 1, "groupTitles" : [ "KnowledgeApp", "public content" ] }, { "userId" : 19, "username" : "gcholewa", "roleId" : 1, "groupTitles" : [ "KnowledgeApp", "public content" ] }, { "userId" : 22, "username" : "fischer", "roleId" : 1, "groupTitles" : [ "Ernährungsfüchse","KnowledgeApp", "public content" ] }, { "userId" : 27, "username" : "test1", "roleId" : 1, "groupTitles" : [ "KnowledgeApp", "public content" ] }, { "userId" : 37, "username" : "dangerer", "roleId" : 5, "groupTitles" : [ "Ernährungsfüchse", "KnowledgeApp", "public content" ] }, { "userId" : 38, "username" : "gtn_support", "roleId" : 1, "groupTitles" : [ "Ernährungsfüchse", "KnowledgeApp", "public content" ] }, { "userId" : 39, "username" : "gtnuser2", "roleId" : 1, "groupTitles" : [ "KnowledgeApp", "public content" ] } ]';
	curl_close($ch);
	$output=knowledgefox_output_get_json_content($output);
	$kf_users=json_decode($output);
	foreach ($kf_users as $kf_user){
		if ($kf_user->username==$user->username) {
			return $kf_user;
			exit;
		}
	}
	return false;
}

function knowledgefox_ws_get_kfgroup($uid,$wsparams){

	$ch = curl_init();
	curl_setopt($ch, CURLOPT_URL, $wsparams->knowledgefoxserver."/KnowledgePulse/ws/rest/client/3.0/groups?uid=".$uid);

	curl_setopt($ch, CURLOPT_HEADER, true);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_USERPWD, $wsparams->knowledgeauthuser.":".$wsparams->knowledgeauthpwd);
	//curl_setopt($ch, CURLOPT_POST, 1);
	//curl_setopt($ch, CURLOPT_USERPWD, "kfoxadmin:d3c11f15644aaef0ba844c5413aa328748b583f2");
	curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
	$output = curl_exec($ch);
	curl_close($ch);
	
	//$info = curl_getinfo($ch);
	if ($wsparams->LOCALH) $output= 'chunked Content-Type: application/json [{"groupId" : 1, "uid" : "1111111111111111123456789abcdef0", "title" : "ErnährungsfüchseTTTT"}]';
	$output=knowledgefox_output_get_json_content($output);
	$kf_groups=json_decode($output);
	if ($kf_groups) {
		$kf_group=new stdClass();
		$kf_group->title=$kf_groups[0]->title;
		$kf_group->groupId=$kf_groups[0]->groupId;
			return $kf_group;
	}
	else{	return -1;}
}

function knowledgefox_ws_kfenroluser($kf_user,$kf_lernpaket,$wsparams){

	$ch = curl_init();
	//curl_setopt($ch, CURLOPT_URL, $wsparams->knowledgefoxserver."/KnowledgePulse/ws/rest/client/3.0/users/".$kf_user->userId);
	curl_setopt($ch, CURLOPT_URL, $wsparams->knowledgefoxserver."/KnowledgePulse/ws/rest/client/3.0/users/".$kf_user->userId."/groups");


	curl_setopt($ch, CURLOPT_HEADER, true);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_USERPWD, $wsparams->knowledgeauthuser.":".$wsparams->knowledgeauthpwd);
	curl_setopt($ch, CURLOPT_POST, 1);
	$usera=array();
	//$ugroupname=$kf_user->groupTitles;
	//$ugroupname[]=$kf_grouptitle;
	$usera["uid"]=$kf_lernpaket;
	$data_string = json_encode($usera);
	curl_setopt($ch,CURLOPT_POSTFIELDS, $data_string);
	curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json'));
	/*[{"groupId" : 1, "uid" : "123456789abcdef0123456789abcdef0", "title" :
"public content"}]*/
	curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
	
	$output = curl_exec($ch);
	curl_close($ch);
	echo "<hr>";
	echo $wsparams->knowledgefoxserver."/KnowledgePulse/ws/rest/client/3.0/users/".$kf_user->userId."/groups/".$kf_lernpaket;
	echo "<hr>";
	//echo $data_string;
	echo $output;
	echo "<hr>";
	$info = curl_getinfo($ch);
	echo $info;
	
	return true;
}

function knowledgefox_ws_kfadduser($mdl_user,$wsparams){

	$ch = curl_init();

	curl_setopt($ch, CURLOPT_URL, $wsparams->knowledgefoxserver."/KnowledgePulse/ws/rest/client/3.0/users");

	curl_setopt($ch, CURLOPT_HEADER, true);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch, CURLOPT_USERPWD, $wsparams->knowledgeauthuser.":".$wsparams->knowledgeauthpwd);
	curl_setopt($ch, CURLOPT_POST, 1);
	$usera=array();
	$usera["username"]=$mdl_user->username;
	$usera["password"]="zufallspasswort";
	$usera["email"]=$mdl_user->email;
	$usera["provider"]="MOODLE";
	$data_string = json_encode($usera);
	curl_setopt($ch,CURLOPT_POSTFIELDS, $data_string);
	curl_setopt($ch, CURLOPT_HTTPHEADER, array('Content-Type:application/json'));
	curl_setopt($ch, CURLOPT_HTTPAUTH, CURLAUTH_BASIC);
	$output = curl_exec($ch);
	curl_close($ch);
	
	return true;
}